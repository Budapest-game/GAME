services: 
  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    volumes: 
      - ./postgresdata:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - local
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    ports:
      - 8080:${PGADMIN_LISTEN_PORT}
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin:rw
    depends_on:
      - postgres
    networks:
      - local
  mongo:
    image: mongo:4.4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - local 
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks: 
      - local
  game: 
    depends_on:
      - postgres
      - pgadmin
      - mongo
      - mongo-express
    build: 
      context: .
      dockerfile: ./docker/Dockerfile
    ports:
      - 5000:5000
    restart: always
    networks:
      - local
networks:
  local:
    driver: bridge 
